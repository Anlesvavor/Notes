{"version":3,"sources":["components/topbar/TopBar.js","components/sidebar/SideBarItem.js","components/sidebar/SideBar.js","components/workarea/WorkArea.js","components/userpermissions/UsersPermissions.js","components/share/Share.js","App.js","serviceWorker.js","index.js"],"names":["TopBar","props","className","onClick","toggleSideBar","newNote","SideBarItem","selectNote","bind","note","id","title","text","SideBar","items","notes","map","key","WorkArea","useState","setNote","useEffect","timer","setTimeout","save","clearTimeout","handleChange","e","target","name","value","type","data-toggle","data-target","onChange","UsersPermissions","checkBox","isEnabled","checked","users","user","username","read","edit","delete","share","scope","userData","options","label","Share","selectedOption","setUsers","tabindex","role","aria-labelledby","aria-hidden","data-dismiss","aria-label","filter","isSearchable","App","data","selectedNote","setSelectedNote","setNotes","increment","setIncrement","Fragment","document","getElementById","classList","toggle","sort","a","b","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dbfb53fc.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nimport './TopBar.css';\n\nconst TopBar = props => {\n  return (\n    <div className=\"top-bar row\">\n      <div className=\"col-1\" onClick={props.toggleSideBar}><i className=\"material-icons\">vertical_split</i></div>\n      <div className=\"col-1\" onClick={props.newNote}><i className=\"material-icons\">add</i></div>\n      <div className=\"col-9\">Notes app</div>\n      <div className=\"col-1\"><i className=\"material-icons\">more_vert</i></div>\n    </div>\n  )\n}\n\nTopBar.propTypes = {\n\n}\n\nexport default TopBar;\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport './SideBarItem.css'\n\nconst SideBarItem = props => {\n  return (\n    <div className=\"px-4 side-bar-item\" onClick={props.selectNote.bind(this, props.note.id)}>\n      <div className=\"px-2\"><h4 className=\"text-truncate\">{props.note.title}</h4></div>\n      <div className=\"px-2\"><p className=\"text-truncate\">{props.note.text}</p></div>\n    </div>\n  )\n}\n\nSideBarItem.propTypes = {\n  title: PropTypes.string,\n  text: PropTypes.string\n}\n\nexport default SideBarItem\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport SideBarItem from './SideBarItem'\n\nimport './SideBar.css'\n\nconst SideBar = props => {\n  const items = (() => {\n    return props.notes.map(note =>\n      (<SideBarItem key={note.id} note={note} selectNote={props.selectNote} />));\n  })();\n  return (\n    <div id=\"side-bar\" className=\"py-4\">\n      {items}\n    </div>\n  )\n}\n\nSideBar.propTypes = {\n\n}\n\nexport default SideBar\n","import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\n\nimport './WorkArea.css'\n\nconst WorkArea = props => {\n  const [note, setNote] = useState(props.note);\n\n  useEffect(() => {\n    setNote(props.note);\n  }, [props.note]);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      props.save(note);\n    }, 2000);\n    return () => clearTimeout(timer);\n  });\n\n  const handleChange = e => {\n    setNote({...note, [e.target.name]: e.target.value});\n  }\n  return (\n    <div id=\"work-area\">\n      <div className=\"container-fluid h-100\">\n        <div className=\"row h-100\">\n          <div className=\"col-1\">\n            <button onClick={props.save.bind(this, note)}>Save</button>\n            <button id=\"clickme\" type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\">\n              Share\n            </button>\n          </div>\n          <div className=\"col-10\">\n            <input id=\"title\" name=\"title\" value={note.title} onChange={handleChange}></input>\n            <textarea id=\"sheet\" name=\"text\" value={note.text} onChange={handleChange}></textarea>\n          </div>\n          <div className=\"col-1\">\n          </div>\n        </div>\n        <div className=\"row h-100\">\n          <div className=\"col\">\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nWorkArea.propTypes = {\n\n}\n\nexport default WorkArea\n","import React from 'react'\n\nimport './UsersPermissions.css'\n\nconst UsersPermissions = props => {\n  const checkBox = isEnabled => {\n    return (\n      <input className=\"form-check-input position-static\"\n        type=\"checkbox\"\n        checked={isEnabled}\n      />\n    )\n  }\n  const createUserRow = user => {\n    return (\n      <tr>\n          <td>{user.username}</td>\n          <td>{checkBox(user.read)}</td>\n          <td>{checkBox(user.edit)}</td>\n          <td>{checkBox(user.delete)}</td>\n          <td>{checkBox(user.share)}</td>\n      </tr>\n    )\n  }\n  const users = props.users ? props.users.map(createUserRow) : (<tr></tr>);\n  return (\n    <table id=\"permissions-table\" className=\"table\">\n      <tr>\n        <th scope=\"col\">User</th>\n        <th scope=\"col\">View</th>\n        <th scope=\"col\">Edit</th>\n        <th scope=\"col\">Delete</th>\n        <th scope=\"col\">Share</th>\n      </tr>\n      <tr>\n        <td>Ayylmao</td>\n        <td><input className=\"form-check-input position-static\" type=\"checkbox\"></input></td>\n        <td><input className=\"form-check-input position-static\" type=\"checkbox\"></input></td>\n        <td><input className=\"form-check-input position-static\" type=\"checkbox\"></input></td>\n        <td><input className=\"form-check-input position-static\" type=\"checkbox\"></input></td>\n      </tr>\n      {users};\n    </table>\n  )\n}\n\nexport default UsersPermissions","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport Select from 'react-select'\n\nimport SearchUser from '../searchuser/SearchUser'\nimport UserPermissions from '../userpermissions/UsersPermissions'\n\nimport './Share.css'\n\nconst userData = [\n  {username: 'a', read: true, edit: true, delete: true, share: false},\n  {username: 'anlesvavor', read: true, edit: true, delete: true, share: true},\n  {username: 'Jhon', read: true, edit: false, delete: false, share: false}\n];\n\nconst options = userData.map(user => {return{value:user.username, label:user.username}});\n\nconst Share = props => {\n  const [selectedOption, setSelectedOption] = useState({});\n  const [users, setUsers] = useState([]);\n  const addUser = value => {\n    setUsers([userData.filter(user => user.username === value.value)[0], ...users ]);\n  }\n   return (\n    <div className=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n      <div className=\"modal-dialog\" role=\"document\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\" id=\"exampleModalLabel\">Modal title</h5>\n            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div className=\"modal-body\">\n            <div>\n              <Select\n                value={selectedOption}\n                onChange={addUser}\n                options={options}\n                isSearchable={true}\n              />\n            </div>\n            <div>\n              <UserPermissions users={users}/>\n            </div>\n          </div>\n          <div className=\"modal-footer\">\n            <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n            <button type=\"button\" className=\"btn btn-primary\">Save changes</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nShare.propTypes = {\n\n}\n\nexport default Share\n","import React, { useState } from 'react'\n\nimport TopBar from './components/topbar/TopBar'\nimport SideBar from './components/sidebar/SideBar'\nimport WorkArea from './components/workarea/WorkArea'\nimport Share from './components/share/Share'\n\nimport './App.css'\n\nfunction App() {\n  const data = [\n    {id: 1, title: \"Note1\", text: \"tex1\"},\n    {id: 2, title: \"Note2\", text: \"tex2\"},\n    {id: 3, title: \"Note3\", text: \"tex3\"}\n  ];\n  const [selectedNote, setSelectedNote] = useState(data[0]);\n  const [notes, setNotes] = useState(data);\n  const [increment, setIncrement] = useState(4);\n\n  const toggleSideBar = () => {\n    document.getElementById('side-bar').classList.toggle(\"active\");\n  };\n  const selectNote = id => {\n    setSelectedNote(notes.filter(note => note.id === id)[0]);\n  }\n  const save = newNote => {\n    setNotes([...notes.filter(note=>note.id !== newNote.id), newNote].sort((a, b)=> a.id - b.id));\n  }\n  const newNote = () => {\n    setIncrement(increment + 1);\n    setNotes([...notes, {id:increment, title:\"New Note\", text:\"add text..\"}]);\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"App container-fluid h-100 w-100\">\n        <TopBar toggleSideBar={toggleSideBar} newNote={newNote}/>\n        <div className=\"wrapper\">\n          <SideBar notes={notes} selectNote={selectNote}/>\n          <WorkArea note={selectedNote} save={save}/>\n        </div>\n      </div>\n      <Share note={selectNote}/>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}